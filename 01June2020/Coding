1.Write a Java Program to left rotate the elements of an array.
Code:-
class Main {
public static void main(String[] args) {
int [] arr = new int [] {5, 10, 15, 20, 25};
int n = 3;
System.out.println("Original array: ");
for (int i = 0; i<arr.length; i++) {
System.out.print(arr[i] + " ");
}
for(int i = 0; i<n; i++){
int j, first;
first = arr[0];
for(j = 0; j<arr.length-1; j++){
arr[j] = arr[j+1];
}
arr[j] = first;
}
System.out.println();
System.out.println("Array after left rotation: ");
for(int i = 0; i<arr.length; i++){
System.out.print(arr[i] + " ");
}
}
}

2.Write a python program to remove duplicate elements from a list.
Code:-
a = []
n = int(input("Enter the number of elements in list:"))
for x in range(0,n):
    element = int(input("Enter element" + str(x+1) + ":"))
    a.append(element)
b = set()
unique = []
for x in a:
    if x not in b:
        unique.append(x)
        b.add(x)
print("Non-duplicate items:")
print(unique)


3.Given an array of positive integers. Write a C Program to find the leaders in
the array. 
Note: An element of array is leader if it is greater than or equal to all the elements to
its right side. Also, the rightmost element is always a leader.
Input:
The first line of input contains an integer T denoting the number of test cases. The
description of T test cases follows.
The first line of each test case contains a single integer N denoting the size of array.
The second line contains N space-separated integers A1, A2, ..., AN denoting the
elements of the array.
Output:
Print all the leaders.
Constraints:
1 &lt;= T &lt;= 100
1 &lt;= N &lt;= 107
0 &lt;= Ai &lt;= 107
Example:
Input:
3
6
16 17 4 3 5 2
5
1 2 3 4 0
5
7 4 5 7 3
Output:
17 5 2
4 0
7 7 3
Explanation:
Testcase 3: All elements on the right of 7 (at index 0) are smaller than or equal to 7.
Also, all the elements of right side of 7 (at index 3) are smaller than 7. And, the last
element 3 is itself a leader since no elements are on its right.

Code:-

#include<stdio.h>
#include<limits.h>
void ArrayLeader(int arr[],int size);
void PrintArray(int arr[],int size);
int main(void)
{
int arr[] = {7,4,5,7,3};
int size = 5;
printf("\n\n....... Array Element .........\n\n");
PrintArray(arr,size);
printf("\n\n....... Leader in Array .......\n\n");
ArrayLeader(arr,size);
printf("\n\n...............................\n\n");
return 0;
}
void ArrayLeader(int arr[],int size)
{
int MaxTillNow,i;
MaxTillNow = INT_MIN;
for(i=size-1;i>=0;--i)
{
if(arr[i]>MaxTillNow)
{
printf("%d ",arr[i]);
MaxTillNow = arr[i];
}
}
}
void PrintArray(int arr[],int size)
{
int i;
for(i=0;i<size;++i)
printf("%d ",arr[i]);
}
