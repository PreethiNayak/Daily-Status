1.Write a python program to find digital root of a number. 
Description:
A digital root is the recursive sum of all the digits in a number. Given n, take the sum of the digits of n. If that value has more than one digit, continue reducing in this way until a single-digit number is produced. This is only applicable to the natural numbers.
digit_root(0)= 0
digital_root(16)
=> 1 + 6
=> 7
digital_root(132189)
=> 1 + 3 + 2 + 1 + 8 + 9
=> 24 ...
=> 2 + 4
=> 6
code:-
def DigitalRoot(number):
	addper = 0
	while number >=10:
		number = sum(int(digit)for digit in str(number))
		addper +=1
	print(number)
DigitalRoot(2516)



2.Write a function that accepts a string consisting entiring of brackets ({}) and returns whether it is balanced. Every "opening" bracket must be followed by a closing bracket of the same type. There can also be nested brackets, which adhere to the same rule.
f('()[]{}(([])){[()][]}') // true
f('())[]{}') // false
code:-
import java.util.Stack;
public class Main
{
public static void main(String[] args) 
{
	System.out.println(is_parentheses_balanced("()[]{}(([])){[()][]}")); 
}
public static boolean matchingPeer(char open , char close)
{
	if ( open == '(' && close == ')')
	{
		return true;
	}
	if ( open == '[' && close == ']')
	{
		return true;
	}
	else
	{
	return false;
	}
}

public static boolean is_parentheses_balanced(String equation)
{ 
	
	char[] c = equation.toCharArray();
	Stack <Character>myStack= new Stack <Character> ();
	for (int i = 0; i<c.length; i++)
	{
		if(c[i]=='(' || c[i] == '[' )
		{
			myStack.push(c[i]);
		}
		else if (c[i]== ')' || c[i]==']')
		{
				if(matchingPeer(myStack.peek(),c[i]) == true)
				{
					myStack.pop();
				
				} else
				{
					return false;
				}
		}
	}
	if(myStack.isEmpty())
	{
		return true;
	}	
	else 
	{
		return false;
	}
	}	
}

3.Write jsp code to display todayâ€™s date and time using expression tag
code:-
<%@ page import = "java.io.*,java.util.*, javax.servlet.*" %>
<html>
   <head>
      <title>Display Current Date &amp; Time</title>
   </head>
    <body>
      <center>
         <h1>Display Current Date &amp; Time</h1>
      </center>
      <%
         Date date = new Date();
         out.print( "<h2 align = \"center\">" +date.toString()+"</h2>");
      %>
   </body>
</html>

4.Write jsp script to determine how many times the visitor has loaded the page.
code:-
<%@ page import = "java.io.*,java.util.*" %>
<html>
   <head>
      <title>Application object in JSP</title>
   </head>
    <body>
      <%
         Integer hitsCount = (Integer)application.getAttribute("hitCounter");
         if( hitsCount ==null || hitsCount == 0 ) {
            /* First visit */
            out.println("Welcome to my website!");
            hitsCount = 1;
         } else {
            /* return visit */
            out.println("Welcome back to my website!");
            hitsCount += 1;
         }
         application.setAttribute("hitCounter", hitsCount);
      %>
      <center>
         <p>Total number of visits: <%= hitsCount%></p>
      </center>
   </body>
</html>


5.Write a  program  to find the last remaining element in the array after reducing the array.
code:-
#include <iostream> 
using namespace std; 

int find_value(int a[], int n, int k) 
{ 
    
    int sum = 0; 
  
   
    for (int i = 0; i < n; i++) { 
        sum += a[i]; 
    } 
 
    return sum % k; 
} 
  

int main() 
{ 
    int n = 5, k = 3; 
    int a[] = { 12, 4, 13, 0, 5 }; 
    cout << find_value(a, n, k); 
    return 0; 
}

